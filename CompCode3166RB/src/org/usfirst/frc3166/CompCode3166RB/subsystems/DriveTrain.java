// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3166.CompCode3166RB.subsystems;

import org.usfirst.frc3166.CompCode3166RB.RobotMap;
import org.usfirst.frc3166.CompCode3166RB.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Talon;
import org.usfirst.frc3166.CompCode3166RB.OI;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {
	
	
	
	
   
    private final SpeedController leftMotor1 = new Talon(0);
    private final SpeedController leftMotor2 = new Talon(1);
    SpeedControllerGroup m_left = new SpeedControllerGroup(leftMotor1, leftMotor2);
    private final SpeedController rightMotor1 = new Talon(3);
    private final SpeedController rightMotor2 = new Talon(4);
    SpeedControllerGroup m_right = new SpeedControllerGroup(rightMotor1, rightMotor2);
    private final DifferentialDrive robotDrive = new DifferentialDrive(m_left, m_right);
    OI oi = new OI();
    boolean flag;
    Timer time;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() { 
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND 

        setDefaultCommand(new TankDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void robotDrive(double left, double right ) {
    robotDrive.tankDrive(right, left);
    }
    public void robotDrive(Joystick joy) {
    	robotDrive(joy.getY(), joy.getAxis(AxisType.kThrottle));
    }
    
    
    
    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

	